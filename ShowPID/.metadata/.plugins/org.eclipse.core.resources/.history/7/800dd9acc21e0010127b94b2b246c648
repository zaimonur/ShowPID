package com.zaimonur;

import com.sun.jna.Native;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.platform.win32.WinDef;
import com.sun.jna.win32.StdCallLibrary;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Timer;
import java.util.TimerTask;

public class ShowPID {
    public static void main(String[] args) {
    	// Ana pencere
        JFrame frame = new JFrame("Show PID");
        frame.setTitle("Show PID");
        frame.setUndecorated(true); // Çerçevesiz pencere
        frame.setBackground(new Color(0, 0, 0, 0)); // Tam şeffaf arkaplan
        frame.setAlwaysOnTop(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(240, 60);

        // Panel (şeffaf arkaplan + yuvarlatılmış köşe)
        JPanel panel = new JPanel(new BorderLayout()) {
            protected void paintComponent(Graphics g) {
                g.setColor(new Color(0, 0, 0, 180)); // Siyah şeffaf
                g.fillRoundRect(0, 0, getWidth(), getHeight(), 20, 20);
            }
        };
        panel.setOpaque(false);
        panel.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));

        // PID etiketi
        JLabel label = new JLabel("PID: ...");
        label.setForeground(Color.WHITE);
        label.setFont(new Font("Segoe UI", Font.BOLD, 16));
        panel.add(label, BorderLayout.WEST);

        // Kapatma butonu
        JButton closeButton = new JButton("X");
        closeButton.setFocusPainted(false);
        closeButton.setFont(new Font("Segoe UI", Font.BOLD, 16));
        closeButton.setForeground(Color.WHITE);
        closeButton.setContentAreaFilled(false);
        closeButton.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 10));
        closeButton.addActionListener(e -> frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING)));
        panel.add(closeButton, BorderLayout.EAST);

        frame.setContentPane(panel);

        // Ekran sağ alt köşe yerleşimi
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int x = screenSize.width - frame.getWidth() - 20;
        int y = screenSize.height - frame.getHeight() - 60;
        frame.setLocation(x, y);
        

        Image icon = Toolkit.getDefaultToolkit().getImage(ShowPID.class.getResource("/showpidpng.png")); //icon dosyası
        frame.setIconImage(icon);
        frame.setVisible(true);

        // PID Güncelleyici
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            public void run() {
                WinDef.HWND hwnd = User32.INSTANCE.GetForegroundWindow();
                IntByReference pid = new IntByReference();
                User32.INSTANCE.GetWindowThreadProcessId(hwnd, pid);
                label.setText("PID: " + pid.getValue());
            }
        }, 0, 500);

        // Kapanınca zamanlayıcıyı durdur
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                timer.cancel();
                System.exit(0);
            }
        });
    }

    // JNA ile Windows API erişimi
    public interface User32 extends StdCallLibrary {
        User32 INSTANCE = Native.load("user32", User32.class);
        WinDef.HWND GetForegroundWindow();
        int GetWindowThreadProcessId(WinDef.HWND hWnd, IntByReference lpdwProcessId);
    }
}
